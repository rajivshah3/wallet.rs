name: Populate cache

on:
  push:
    branches:
      - main
      - dev
      - develop
      - ci/**
  pull_request:
    branches:
      - dev
      - develop
    paths-ignore:
      - 'specs/**'
      - 'docs/**'

concurrency: 
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  populate-cache:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - uses: actions/checkout@v3

    - name: Install toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true

    - name: Install LLVM and Clang (Windows) # required for bindgen to work, see https://github.com/rust-lang/rust-bindgen/issues/1797
      uses: KyleMayes/install-llvm-action@32c4866ebb71e0949e8833eb49beeebed48532bd
      if: matrix.os == 'windows-latest'
      with:
        version: "11.0"
        directory: ${{ runner.temp }}/llvm
      
    - name: Set LIBCLANG_PATH (Windows)
      run: echo "LIBCLANG_PATH=$((gcm clang).source -replace "clang.exe")" >> $env:GITHUB_ENV
      if: matrix.os == 'windows-latest'

    - name: Install required packages (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install libudev-dev libusb-1.0-0-dev

    - uses: Swatinem/rust-cache@v2
      with:
        workspaces: |
          .
          bindings/nodejs
          bindings/python
          bindings/java
          bindings/swift

    - name: Build crate and tests
      # timeout-minutes: 60
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --all-features --release --no-run

    - name: Set up Node.js 14.x
      uses: actions/setup-node@v2
      with:
        node-version: '14.x'

      # Temporary fix for "ValueError: invalid mode: 'rU' while trying to load binding.gyp"
      # See <PR link>
      # This can be removed when "prebuild" updates "node-gyp"
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Build nodejs binding
      run: npm ci --build-from-source
      working-directory: bindings/nodejs

    - name: Build library for Swift binding
      if: matrix.os == 'macos-latest'
      timeout-minutes: 60
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --all-features --release --manifest-path bindings/swift/Cargo.toml

    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
  
    - name: Install dependencies for python binding test
      run: |
        python -m pip install --upgrade setuptools pip wheel
        python -m pip install tox-gh-actions

    - name: Build and test python binding
      run: tox
      working-directory: bindings/python

    - name: Set Up Java 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'

    - name: Test
      shell: bash
      working-directory: bindings/java/
      run: |
        chmod +x gradlew
        ./gradlew test -i
